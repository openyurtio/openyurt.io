"use strict";(self.webpackChunkopenyurt_io=self.webpackChunkopenyurt_io||[]).push([[4332],{60094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"faq/coredns","title":"coredns","description":"1. In the edge node pool, cross-node Pods can be accessed through PodIP, but cannot be accessed through service","source":"@site/versioned_docs/version-v1.4/faq/coredns.md","sourceDirName":"faq","slug":"/faq/coredns","permalink":"/docs/faq/coredns","draft":false,"unlisted":false,"editUrl":"https://github.com/openyurtio/openyurt.io/edit/master/docs/faq/coredns.md","tags":[],"version":"v1.4","lastUpdatedBy":"Liang Deng","lastUpdatedAt":1733802663000,"frontMatter":{"title":"coredns"},"sidebar":"docs","previous":{"title":"yurt-tunnel","permalink":"/docs/faq/yurt-tunnel"},"next":{"title":"prometheus","permalink":"/docs/faq/prometheus"}}');var s=t(74848),r=t(28453);const c={title:"coredns"},a=void 0,i={},d=[];function l(e){const n={a:"a",code:"code",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"** 1. In the edge node pool, cross-node Pods can be accessed through PodIP, but cannot be accessed through service**"}),"\n",(0,s.jsx)(n.p,{children:"First, it can be accessed through podIP, indicating that the cross-node container network (such as vxlan of flannel) is normal, and then the service cannot be accessed, which can be analyzed as follows:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"In the net namespace of the pod, whether to directly access the service clusterIP is reachable"}),"\n",(0,s.jsxs)(n.li,{children:["If it is unreachable, it means that kube-proxy may have a problem with the configuration of the backend instance of the service. Generally, it is a problem with the service topology. You can refer to the problem for analysis ",(0,s.jsx)(n.a,{href:"/docs/faq/yurthub",children:"On the edge node, the service topology capability does not take effect"})]}),"\n",(0,s.jsxs)(n.li,{children:["If it is reachable through service clusterIP, it means domain name resolution problem. then we can check the dns problem.","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Enter the net and mount namespace of the pod, check the contents of the /etc/resolv.conf file, and see the address of the dns nameserver, which is usually the clusterIP of the kube-dns service"}),"\n",(0,s.jsxs)(n.li,{children:["Execute the command: ",(0,s.jsx)(n.code,{children:"dig @{dns nameserver} {service name}"}),", and check whether a resolution result can be returned or not."]}),"\n",(0,s.jsxs)(n.li,{children:["Execute the command: ",(0,s.jsx)(n.code,{children:"dig @{CoreDNS pod ip} {service name}"}),", and check whether a resolution result can be returned or not."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"dns nameserver"})," can not work but ",(0,s.jsx)(n.code,{children:"CoreDNS pod ip"})," can work, this means that traffic of kube-dns service can not be forwarded to the accessible CoreDNS pod instances. maybe service topology routing selection of kubed-dns service does not take effect, you can refer to the Yurthub problem ",(0,s.jsx)(n.a,{href:"/docs/faq/yurthub",children:"On the edge node, the Service topology capability does not take effect"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var o=t(96540);const s={},r=o.createContext(s);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);